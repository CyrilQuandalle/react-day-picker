{"version":3,"sources":["webpack:///component---src-pages-api-day-picker-input-js-4da39f2db39737ad702a.js","webpack:///./src/pages/api/DayPickerInput.js"],"names":["webpackJsonp","358","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_gatsbyLink","_gatsbyLink2","_Anchor","_Anchor2","_CodeBlock","_CodeBlock2","_DocPage","_DocPage2","_ApiDocs","_ApiDocs2","createElement","title","href","id","to"],"mappings":"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","file":"component---src-pages-api-day-picker-input-js-4da39f2db39737ad702a.js","sourcesContent":["webpackJsonp([219287404217639],{\n\n/***/ 358:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(9);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _Anchor = __webpack_require__(41);\n\t\n\tvar _Anchor2 = _interopRequireDefault(_Anchor);\n\t\n\tvar _CodeBlock = __webpack_require__(21);\n\t\n\tvar _CodeBlock2 = _interopRequireDefault(_CodeBlock);\n\t\n\tvar _DocPage = __webpack_require__(20);\n\t\n\tvar _DocPage2 = _interopRequireDefault(_DocPage);\n\t\n\tvar _ApiDocs = __webpack_require__(61);\n\t\n\tvar _ApiDocs2 = _interopRequireDefault(_ApiDocs);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function () {\n\t  return _react2.default.createElement(\n\t    _DocPage2.default,\n\t    { title: 'DayPickerInput API' },\n\t    _react2.default.createElement(\n\t      _CodeBlock2.default,\n\t      null,\n\t      'import DayPickerInput from \\'react-day-picker/DayPickerInput\\''\n\t    ),\n\t    _react2.default.createElement(\n\t      'h2',\n\t      null,\n\t      'API summary'\n\t    ),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      'Component\\u2019s Props'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#classNames' },\n\t        'classNames'\n\t      ),\n\t      ',',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#clickUnselectsDay' },\n\t        'clickUnselectsDay'\n\t      ),\n\t      ',',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#component' },\n\t        'component'\n\t      ),\n\t      ',',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#dayPickerProps' },\n\t        'dayPickerProps'\n\t      ),\n\t      ', ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#format' },\n\t        'format'\n\t      ),\n\t      ', ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#formatDate' },\n\t        'formatDate'\n\t      ),\n\t      ', ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#keepFocus' },\n\t        'keepFocus'\n\t      ),\n\t      ', ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#hideOnDayClick' },\n\t        'hideOnDayClick'\n\t      ),\n\t      ',',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#inputProps' },\n\t        'inputProps'\n\t      ),\n\t      ',',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#overlayComponent' },\n\t        'overlayComponent'\n\t      ),\n\t      ',',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#parseDate' },\n\t        'parseDate'\n\t      ),\n\t      ', ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#placeholder' },\n\t        'placeholder'\n\t      ),\n\t      ', ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#showOverlay' },\n\t        'showOverlay'\n\t      ),\n\t      ', ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#style' },\n\t        'style'\n\t      ),\n\t      ',',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#value' },\n\t        'value'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      'Event handlers'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#onDayChange' },\n\t        'onDayChange'\n\t      ),\n\t      ',',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#onDayPickerHide' },\n\t        'onDayPickerHide'\n\t      ),\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#onDayPickerShow' },\n\t        'onDayPickerShow'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      'Public methods'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#getDayPicker' },\n\t        'getDayPicker'\n\t      ),\n\t      ', ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#getInput' },\n\t        'getInput'\n\t      ),\n\t      ', ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#hideDayPicker' },\n\t        'hideDayPicker'\n\t      ),\n\t      ',',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: '#showDayPicker' },\n\t        'showDayPicker'\n\t      )\n\t    ),\n\t    _react2.default.createElement('hr', null),\n\t    _react2.default.createElement(\n\t      _ApiDocs2.default,\n\t      null,\n\t      _react2.default.createElement(\n\t        'h2',\n\t        null,\n\t        'DayPickerInput Props'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'classNames' }),\n\t        'classNames ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'Object'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Customize the CSS class names used when rendering the component.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'The object expects the following keys:'\n\t      ),\n\t      _react2.default.createElement(\n\t        _CodeBlock2.default,\n\t        null,\n\t        '{\\n  container,            // The container element\\n  overlayWrapper,       // The overlay\\'s wrapper\\n  overlay,              // The overlay\\'s container\\n}'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'clickUnselectsDay' }),\n\t        'clickUnselectsDay ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'boolean = false'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Unselect and clear the input when clicking on a previously selected day.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'component' }),\n\t        'component ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'string | React.Component = \"input\"'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'The component class to render the input field.'\n\t      ),\n\t      _react2.default.createElement(\n\t        _CodeBlock2.default,\n\t        null,\n\t        '<DayPickerInput component={props => <input {...props} />} />'\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'The component must support the',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'onChange'\n\t        ),\n\t        ', ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'onFocus'\n\t        ),\n\t        ', ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'onKeyUp'\n\t        ),\n\t        ',',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'onClick'\n\t        ),\n\t        ' and ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'onBlur'\n\t        ),\n\t        ' props. If you want to keep the focus when the user picks a day, the component class must have a',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'focus'\n\t        ),\n\t        ' method.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'dayPickerProps' }),\n\t        'dayPickerProps ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'Object'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'The ',\n\t        _react2.default.createElement(\n\t          _gatsbyLink2.default,\n\t          { to: '/api/DayPicker' },\n\t          'DayPicker props'\n\t        ),\n\t        ' to customize the calendar rendered in the overlay.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'format' }),\n\t        'format ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'string | string[]'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'The format string(s) used for formatting and parsing dates. It works with',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          'a',\n\t          { href: '#parseDate' },\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            'parseDate'\n\t          )\n\t        ),\n\t        ' ',\n\t        'and',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          'a',\n\t          { href: '#formatDate' },\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            'formatDate'\n\t          )\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'formatDate' }),\n\t        'formatDate',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          '(date: Date?, format: string? | string[]?, locale: string?) \\u21D2 string'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Date formatter used for displaying the selected date as value of the input field. As default, it returns dates formatted as',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'YYYY-M-D'\n\t        ),\n\t        '.',\n\t        _react2.default.createElement('br', null),\n\t        'Arguments: ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'format'\n\t        ),\n\t        ' is the value coming from the',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          'a',\n\t          { href: '#format' },\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            'format'\n\t          )\n\t        ),\n\t        ' ',\n\t        'prop, while ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'locale'\n\t        ),\n\t        ' is from',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          'a',\n\t          { href: '#dayPickerProps' },\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            'dayPickerProps'\n\t          )\n\t        ),\n\t        '.',\n\t        _react2.default.createElement('br', null),\n\t        'See also',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          'a',\n\t          { href: '#parseDate' },\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            'parseDate'\n\t          )\n\t        ),\n\t        '.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'If you are using ',\n\t        _react2.default.createElement(\n\t          'a',\n\t          { href: 'http://momentjs.com/' },\n\t          'moment.js'\n\t        ),\n\t        ' in your app, we already provide this function as addon: see',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          _gatsbyLink2.default,\n\t          { to: '/examples/input-moment' },\n\t          'this example'\n\t        ),\n\t        '.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'hideOnDayClick' }),\n\t        'hideOnDayClick ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'boolean = true'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Hide the overlay when the user clicks on a day cell.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'inputProps' }),\n\t        'inputProps ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'Object'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Additional props to add to the ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'input'\n\t        ),\n\t        ' component. The',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'value'\n\t        ),\n\t        ' key is ignored: use the',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          'a',\n\t          { href: '#value' },\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            'value'\n\t          )\n\t        ),\n\t        ' ',\n\t        'prop instead.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'keepFocus' }),\n\t        'keepFocus ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'boolean = true'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Keep focus on the input field after switching the focus into the overlay. You may want to disable the focus on the input field when using an ',\n\t        _react2.default.createElement(\n\t          'a',\n\t          { href: '#overlayComponent' },\n\t          'overlayComponent'\n\t        ),\n\t        '.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'overlayComponent' }),\n\t        'overlayComponent ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'React.Component'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'A custom React Element or Component to use for the overlay. The element will receive the following props:'\n\t      ),\n\t      _react2.default.createElement(\n\t        'ul',\n\t        null,\n\t        _react2.default.createElement(\n\t          'li',\n\t          null,\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            'selectedDay: ?Date'\n\t          ),\n\t          ' The currently selected day'\n\t        ),\n\t        _react2.default.createElement(\n\t          'li',\n\t          null,\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            'month: Date'\n\t          ),\n\t          ' The month displayed in the calendar'\n\t        ),\n\t        _react2.default.createElement(\n\t          'li',\n\t          null,\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            'input: DOM Element'\n\t          ),\n\t          ' The input field'\n\t        ),\n\t        _react2.default.createElement(\n\t          'li',\n\t          null,\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            'classNames: Object'\n\t          ),\n\t          ' The input field'\n\t        ),\n\t        _react2.default.createElement(\n\t          'li',\n\t          null,\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            '...props: Object'\n\t          ),\n\t          ' Other props to pass to the HTML element to handle interaction with the calendar'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        _CodeBlock2.default,\n\t        null,\n\t        'import React from \\'react\\';\\nimport { DayPickerInput } from \\'react-day-picker\\';\\n\\nfunction OverlayComponent({ children, ...props }) {\\n  return (\\n    <div {...props}>\\n      <p>My custom things</p>\\n      /* include the calendar */\\n      { children }\\n      <p>Some content below the calendar</p>\\n    </div>\\n  );\\n}\\n\\nfunction MyDayPickerInput() {\\n  return <DayPickerInput overlayComponent={OverlayComponent} />;\\n}'\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'As default, the input field keep always the focus when interacting with the calendar. However this may cause problems if the custom overlay has an input field, so you may need to set',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'keepFocus={false}'\n\t        ),\n\t        '. See',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          _gatsbyLink2.default,\n\t          { to: '/examples/input-custom-overlay' },\n\t          'this example'\n\t        ),\n\t        '.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'parseDate' }),\n\t        'parseDate',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          '(str: string?, format: string? | string[]?, locale: string?) \\u21D2 Date | void'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Date parser used for parsing the string typed in the input field. As default, it parses only dates formatted as ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'YYYY-M-D'\n\t        ),\n\t        '.',\n\t        _react2.default.createElement('br', null),\n\t        'Arguments: ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'format'\n\t        ),\n\t        ' is the value coming from the',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          'a',\n\t          { href: '#format' },\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            'format'\n\t          )\n\t        ),\n\t        ' ',\n\t        'prop, while ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'locale'\n\t        ),\n\t        ' is from',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          'a',\n\t          { href: '#dayPickerProps' },\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            'dayPickerProps'\n\t          )\n\t        ),\n\t        '.',\n\t        _react2.default.createElement('br', null),\n\t        'See also',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          'a',\n\t          { href: '#formatDate' },\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            'formatDate'\n\t          )\n\t        ),\n\t        '.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'If you are using ',\n\t        _react2.default.createElement(\n\t          'a',\n\t          { href: 'http://momentjs.com/' },\n\t          'moment.js'\n\t        ),\n\t        ' in your app, we already provide this function as addon: see',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          _gatsbyLink2.default,\n\t          { to: '/examples/input-moment' },\n\t          'this example'\n\t        ),\n\t        '.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'placeholder' }),\n\t        'placeholder ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'string'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'The placeholder to use for the ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'input'\n\t        ),\n\t        ' field.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'showOverlay' }),\n\t        'showOverlay ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'boolean = false'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Show the overlay during the initial rendering of the component. This is useful if you want to keep the overlay visibile while styling it.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'style' }),\n\t        'style ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'object'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'The style attribute applied to the container.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'value' }),\n\t        'value ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'string | Date'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'The value of the ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          'input'\n\t        ),\n\t        ' field.'\n\t      ),\n\t      _react2.default.createElement('hr', null),\n\t      _react2.default.createElement(\n\t        'h2',\n\t        null,\n\t        'Event handlers'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'onDayChange' }),\n\t        'onDayChange',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          '(day: ?Date, modifiers: Object, dayPickerInput: DayPickerInput) \\u21D2 void'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Handler function called when the user types into the input field or when a day is clicked on the calendar.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        _react2.default.createElement(\n\t          'strong',\n\t          null,\n\t          'Implementation Notes'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'ul',\n\t        null,\n\t        _react2.default.createElement(\n\t          'li',\n\t          null,\n\t          'If the typed value is empty or not valid, ',\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            'day'\n\t          ),\n\t          ' is',\n\t          ' ',\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            'undefined'\n\t          ),\n\t          ' and ',\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            'modifiers'\n\t          ),\n\t          ' is an empty object.'\n\t        ),\n\t        _react2.default.createElement(\n\t          'li',\n\t          null,\n\t          'The third argument is the DayPickerInput instance. You can use it to access to the instance props or public methods'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        _CodeBlock2.default,\n\t        null,\n\t        'handleDayChange(selectedDay, modifiers, dayPickerInput) {\\n  const input = dayPickerInput.getInput();\\n  this.setState({\\n    selectedDay,\\n    isEmpty: !input.value.trim(),\\n    isValidDay: typeof selectedDay !== \\'undefined\\',\\n    isDisabled: modifiers.disabled === true,\\n  });\\n}\\n\\n<DayPickerInput\\n  onDayChange={handleDayChange}\\n  selectedDay={this.state.selectedDay}\\n/>'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'onDayPickerHide' }),\n\t        'onDayPickerHide ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          '() \\u21D2 void'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Handler function called when the overlay is hidden.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'onDayPickerShow' }),\n\t        'onDayPickerShow ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          '() \\u21D2 void'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Handler function called when the overlay is hidden.'\n\t      ),\n\t      _react2.default.createElement('hr', null),\n\t      _react2.default.createElement(\n\t        'h2',\n\t        null,\n\t        'Public methods'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'getDayPicker' }),\n\t        'getDayPicker ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          '() \\u21D2 DayPicker'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Return the DayPicker instance.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'getInput' }),\n\t        'getInput ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          '() \\u21D2 DOMNode | ReactNode'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Return the input element instance.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'showDayPicker' }),\n\t        'showDayPicker ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          '() \\u21D2 void'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Show the Day Picker overlay.'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        _react2.default.createElement(_Anchor2.default, { id: 'hideDayPicker' }),\n\t        'hideDayPicker ',\n\t        _react2.default.createElement(\n\t          'code',\n\t          null,\n\t          '() \\u21D2 void'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Hide the Day Picker overlay.'\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-api-day-picker-input-js-4da39f2db39737ad702a.js","import React from 'react';\n\nimport Link from 'gatsby-link';\n\nimport Anchor from '../../ui/Anchor';\nimport CodeBlock from '../../ui/CodeBlock';\nimport DocPage from '../../containers/DocPage';\nimport ApiDocs from '../../containers/ApiDocs';\n\nexport default () => (\n  <DocPage title=\"DayPickerInput API\">\n    <CodeBlock>{`import DayPickerInput from 'react-day-picker/DayPickerInput'`}</CodeBlock>\n    <h2>API summary</h2>\n    <h4>Component’s Props</h4>\n    <p>\n      <a href=\"#classNames\">classNames</a>,{' '}\n      <a href=\"#clickUnselectsDay\">clickUnselectsDay</a>,{' '}\n      <a href=\"#component\">component</a>,{' '}\n      <a href=\"#dayPickerProps\">dayPickerProps</a>, <a href=\"#format\">format</a>\n      , <a href=\"#formatDate\">formatDate</a>, <a href=\"#keepFocus\">keepFocus</a>\n      , <a href=\"#hideOnDayClick\">hideOnDayClick</a>,{' '}\n      <a href=\"#inputProps\">inputProps</a>,{' '}\n      <a href=\"#overlayComponent\">overlayComponent</a>,{' '}\n      <a href=\"#parseDate\">parseDate</a>, <a href=\"#placeholder\">placeholder</a>\n      , <a href=\"#showOverlay\">showOverlay</a>, <a href=\"#style\">style</a>,{' '}\n      <a href=\"#value\">value</a>\n    </p>\n    <h4>Event handlers</h4>\n    <p>\n      <a href=\"#onDayChange\">onDayChange</a>,{' '}\n      <a href=\"#onDayPickerHide\">onDayPickerHide</a>{' '}\n      <a href=\"#onDayPickerShow\">onDayPickerShow</a>\n    </p>\n    <h4>Public methods</h4>\n    <p>\n      <a href=\"#getDayPicker\">getDayPicker</a>, <a href=\"#getInput\">getInput</a>\n      , <a href=\"#hideDayPicker\">hideDayPicker</a>,{' '}\n      <a href=\"#showDayPicker\">showDayPicker</a>\n    </p>\n    <hr />\n\n    <ApiDocs>\n      <h2>DayPickerInput Props</h2>\n      <h3>\n        <Anchor id=\"classNames\" />\n        classNames <code>Object</code>\n      </h3>\n      <p>Customize the CSS class names used when rendering the component.</p>\n      <p>The object expects the following keys:</p>\n      <CodeBlock>{`{\n  container,            // The container element\n  overlayWrapper,       // The overlay's wrapper\n  overlay,              // The overlay's container\n}`}</CodeBlock>\n\n      <h3>\n        <Anchor id=\"clickUnselectsDay\" />\n        clickUnselectsDay <code>boolean = false</code>\n      </h3>\n      <p>\n        Unselect and clear the input when clicking on a previously selected day.\n      </p>\n\n      <h3>\n        <Anchor id=\"component\" />\n        component <code>string | React.Component = &quot;input&quot;</code>\n      </h3>\n      <p>The component class to render the input field.</p>\n      <CodeBlock>{`<DayPickerInput component={props => <input {...props} />} />`}</CodeBlock>\n\n      <p>\n        The component must support the\n        <code>onChange</code>, <code>onFocus</code>, <code>onKeyUp</code>,{' '}\n        <code>onClick</code> and <code>onBlur</code> props. If you want to keep\n        the focus when the user picks a day, the component class must have a{' '}\n        <code>focus</code> method.\n      </p>\n      <h3>\n        <Anchor id=\"dayPickerProps\" />\n        dayPickerProps <code>Object</code>\n      </h3>\n      <p>\n        The <Link to=\"/api/DayPicker\">DayPicker props</Link> to customize the\n        calendar rendered in the overlay.\n      </p>\n\n      <h3>\n        <Anchor id=\"format\" />\n        format <code>string | string[]</code>\n      </h3>\n      <p>\n        The format string(s) used for formatting and parsing dates. It works\n        with{' '}\n        <a href=\"#parseDate\">\n          <code>parseDate</code>\n        </a>{' '}\n        and{' '}\n        <a href=\"#formatDate\">\n          <code>formatDate</code>\n        </a>\n      </p>\n\n      <h3>\n        <Anchor id=\"formatDate\" />\n        formatDate{' '}\n        <code>\n          (date: Date?, format: string? | string[]?, locale: string?) ⇒ string\n        </code>\n      </h3>\n      <p>\n        Date formatter used for displaying the selected date as value of the\n        input field. As default, it returns dates formatted as{' '}\n        <code>YYYY-M-D</code>.<br />\n        Arguments: <code>format</code> is the value coming from the{' '}\n        <a href=\"#format\">\n          <code>format</code>\n        </a>{' '}\n        prop, while <code>locale</code> is from{' '}\n        <a href=\"#dayPickerProps\">\n          <code>dayPickerProps</code>\n        </a>\n        .<br />\n        See also{' '}\n        <a href=\"#parseDate\">\n          <code>parseDate</code>\n        </a>\n        .\n      </p>\n      <p>\n        If you are using <a href=\"http://momentjs.com/\">moment.js</a> in your\n        app, we already provide this function as addon: see{' '}\n        <Link to=\"/examples/input-moment\">this example</Link>.\n      </p>\n\n      <h3>\n        <Anchor id=\"hideOnDayClick\" />\n        hideOnDayClick <code>boolean = true</code>\n      </h3>\n      <p>Hide the overlay when the user clicks on a day cell.</p>\n      <h3>\n        <Anchor id=\"inputProps\" />\n        inputProps <code>Object</code>\n      </h3>\n      <p>\n        Additional props to add to the <code>input</code> component. The{' '}\n        <code>value</code> key is ignored: use the{' '}\n        <a href=\"#value\">\n          <code>value</code>\n        </a>{' '}\n        prop instead.\n      </p>\n\n      <h3>\n        <Anchor id=\"keepFocus\" />\n        keepFocus <code>boolean = true</code>\n      </h3>\n      <p>\n        Keep focus on the input field after switching the focus into the\n        overlay. You may want to disable the focus on the input field when using\n        an <a href=\"#overlayComponent\">overlayComponent</a>.\n      </p>\n\n      <h3>\n        <Anchor id=\"overlayComponent\" />\n        overlayComponent <code>React.Component</code>\n      </h3>\n      <p>\n        A custom React Element or Component to use for the overlay. The element\n        will receive the following props:\n      </p>\n      <ul>\n        <li>\n          <code>selectedDay: ?Date</code> The currently selected day\n        </li>\n        <li>\n          <code>month: Date</code> The month displayed in the calendar\n        </li>\n        <li>\n          <code>input: DOM Element</code> The input field\n        </li>\n        <li>\n          <code>classNames: Object</code> The input field\n        </li>\n        <li>\n          <code>...props: Object</code> Other props to pass to the HTML element\n          to handle interaction with the calendar\n        </li>\n      </ul>\n      <CodeBlock>\n        {`import React from 'react';\nimport { DayPickerInput } from 'react-day-picker';\n\nfunction OverlayComponent({ children, ...props }) {\n  return (\n    <div {...props}>\n      <p>My custom things</p>\n      /* include the calendar */\n      { children }\n      <p>Some content below the calendar</p>\n    </div>\n  );\n}\n\nfunction MyDayPickerInput() {\n  return <DayPickerInput overlayComponent={OverlayComponent} />;\n}`}\n      </CodeBlock>\n      <p>\n        As default, the input field keep always the focus when interacting with\n        the calendar. However this may cause problems if the custom overlay has\n        an input field, so you may need to set{' '}\n        <code>{`keepFocus={false}`}</code>. See{' '}\n        <Link to=\"/examples/input-custom-overlay\">this example</Link>.\n      </p>\n\n      <h3>\n        <Anchor id=\"parseDate\" />\n        parseDate{' '}\n        <code>\n          (str: string?, format: string? | string[]?, locale: string?) ⇒ Date |\n          void\n        </code>\n      </h3>\n      <p>\n        Date parser used for parsing the string typed in the input field. As\n        default, it parses only dates formatted as <code>YYYY-M-D</code>.<br />\n        Arguments: <code>format</code> is the value coming from the{' '}\n        <a href=\"#format\">\n          <code>format</code>\n        </a>{' '}\n        prop, while <code>locale</code> is from{' '}\n        <a href=\"#dayPickerProps\">\n          <code>dayPickerProps</code>\n        </a>\n        .<br />\n        See also{' '}\n        <a href=\"#formatDate\">\n          <code>formatDate</code>\n        </a>\n        .\n      </p>\n      <p>\n        If you are using <a href=\"http://momentjs.com/\">moment.js</a> in your\n        app, we already provide this function as addon: see{' '}\n        <Link to=\"/examples/input-moment\">this example</Link>.\n      </p>\n\n      <h3>\n        <Anchor id=\"placeholder\" />\n        placeholder <code>string</code>\n      </h3>\n      <p>\n        The placeholder to use for the <code>input</code> field.\n      </p>\n      <h3>\n        <Anchor id=\"showOverlay\" />\n        showOverlay <code>boolean = false</code>\n      </h3>\n      <p>\n        Show the overlay during the initial rendering of the component. This is\n        useful if you want to keep the overlay visibile while styling it.\n      </p>\n      <h3>\n        <Anchor id=\"style\" />\n        style <code>object</code>\n      </h3>\n      <p>The style attribute applied to the container.</p>\n      <h3>\n        <Anchor id=\"value\" />\n        value <code>string | Date</code>\n      </h3>\n      <p>\n        The value of the <code>input</code> field.\n      </p>\n\n      <hr />\n      <h2>Event handlers</h2>\n\n      <h3>\n        <Anchor id=\"onDayChange\" />\n        onDayChange{' '}\n        <code>\n          (day: ?Date, modifiers: Object, dayPickerInput: DayPickerInput) ⇒ void\n        </code>\n      </h3>\n      <p>\n        Handler function called when the user types into the input field or when\n        a day is clicked on the calendar.\n      </p>\n      <p>\n        <strong>Implementation Notes</strong>\n      </p>\n      <ul>\n        <li>\n          If the typed value is empty or not valid, <code>day</code> is{' '}\n          <code>undefined</code> and <code>modifiers</code> is an empty object.\n        </li>\n        <li>\n          The third argument is the DayPickerInput instance. You can use it to\n          access to the instance props or public methods\n        </li>\n      </ul>\n      <CodeBlock>{`handleDayChange(selectedDay, modifiers, dayPickerInput) {\n  const input = dayPickerInput.getInput();\n  this.setState({\n    selectedDay,\n    isEmpty: !input.value.trim(),\n    isValidDay: typeof selectedDay !== 'undefined',\n    isDisabled: modifiers.disabled === true,\n  });\n}\n\n<DayPickerInput\n  onDayChange={handleDayChange}\n  selectedDay={this.state.selectedDay}\n/>`}</CodeBlock>\n\n      <h3>\n        <Anchor id=\"onDayPickerHide\" />\n        onDayPickerHide <code>() ⇒ void</code>\n      </h3>\n      <p>Handler function called when the overlay is hidden.</p>\n      <h3>\n        <Anchor id=\"onDayPickerShow\" />\n        onDayPickerShow <code>() ⇒ void</code>\n      </h3>\n      <p>Handler function called when the overlay is hidden.</p>\n\n      <hr />\n      <h2>Public methods</h2>\n\n      <h3>\n        <Anchor id=\"getDayPicker\" />\n        getDayPicker <code>() ⇒ DayPicker</code>\n      </h3>\n      <p>Return the DayPicker instance.</p>\n\n      <h3>\n        <Anchor id=\"getInput\" />\n        getInput <code>() ⇒ DOMNode | ReactNode</code>\n      </h3>\n      <p>Return the input element instance.</p>\n\n      <h3>\n        <Anchor id=\"showDayPicker\" />\n        showDayPicker <code>() ⇒ void</code>\n      </h3>\n      <p>Show the Day Picker overlay.</p>\n\n      <h3>\n        <Anchor id=\"hideDayPicker\" />\n        hideDayPicker <code>() ⇒ void</code>\n      </h3>\n      <p>Hide the Day Picker overlay.</p>\n    </ApiDocs>\n  </DocPage>\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/api/DayPickerInput.js"],"sourceRoot":""}